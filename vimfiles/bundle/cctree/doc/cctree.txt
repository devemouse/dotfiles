*cctree.txt*    Plugin for C Call-Tree Explorer *cctree*

Author: Hari Rangarajan (First.Last AT gmail DOT com)
Last Change: 28 Sept. 2008

CCTree version 0.4

For Vim version 7.0 and above

==============================================================================

1. Overview                                     |cctree-overview|
2. Downloads                                    |cctree-download|
3. Installation                                 |cctree-installation|
4. Options                                      |cctree-options|
5. Features                                     |cctree-features|
6. Limitations                                  |cctree-limitations|
7. FAQ & TIPS                                   |cctree-faq|
8. History                                      |cctree-history|
9. Thanks                                       |cctree-thanks|
 
==============================================================================
1. Overview~
                                                *cctree-overview*

CCTree generates call-trees for any function or macro in real-time inside Vim.
Requires Cscope and operation is currently limited to C code.

==============================================================================
2. Downloads~
                                                *cctree-download*

You can download the latest release of the script from this url :
    http://www.vim.org/scripts/script.php?script_id=2368
 
CScope WIN32 versions are available at the following locations:
    http://www.geocities.com/shankara_c/cscope.html
    http://www.bell-labs.com/project/wwexptools/packages.html
    http://iamphet.nm.ru/cscope/index.html


==============================================================================
3. Installation~
                                                *cctree-installation*

Copy this file to ~/.vim/plugins/ or to /vimfiles/plugins/  (on Win32
platforms) 

It might also be possible to load it as a filetype plugin ~/.vim/ftplugin/c/
Need to set :filetype plugin on 


==============================================================================
4. Options~
                                                *cctree-options*

You can customize behavior by changing the following variable settings
                    
4.1. Cscope Symbol Database~
                                                *CCTreeCscopeDb*

Cscope database file, g:CCTreeCscopeDb = "cscope.out"

4.2. Call-tree Depth~
                                                *CCTreeRecursiveDepth* 
Maximum call levels,   g:CCTreeRecursiveDepth = 3

4.3. Call-tree Minimum Visible Depth~
                                                *CCTreeMinVisibleDepth*
Maximum visible(unfolded) level, g:CCTreeMinVisibleDepth = 3

4.4. Call-tree window display~

4.4.1 Orientation~
                                                *CCTreeOrientation*
Orientation of window,  g:CCTreeOrientation = "leftabove"
 (standard vim options for split: [right|left][above|below])

4.5 Direction~
                                                *CCTreeWindowVertical* 
Use Vertical window, g:CCTreeWindowVertical = 1

4.5.1 Dimensions~

These settings determine the layout of the CCTree preview window.

4.5.2 Horizontal Window Settings~
                                                *CCTreeWindowHeight* 
 Horizontal window, g:CCTreeWindowHeight, default is -1.

4.5.2 Vertical Window Settings~
                                                *CCTreeWindowMinWidth* 
                                                *CCTreeWindowWidth* 
 Minimum width for window, g:CCTreeWindowMinWidth = 40.
 g:CCTreeWindowWidth = -1, auto-select best width to fit.


4.6 Call-tree display format~
                                                *CCTreeDisplayMode*
Display format, g:CCTreeDisplayMode, default: 1

Values: 1 -- Ultra-compact (takes minimum screen width)
        2 -- Compact       (Takes little more space)
        3 -- Wide          (Takes copious amounts of space)

For vertical splits, 1 and 2 are good, while 3 is good for horizontal
displays.

4.7. Dynamic Call-tree highlighting~
                                                *CCTreeHilightCallTree*

Enable/disable dynamic call-tree highlighting, default: 1


4.7.1 Syntax items~
                                               *CCTreeSymbol* *CCTreeHiSymbol*
CCTreeSymbol is the symbol name.
CCTreeHiSymbol is the highlighted call tree functions.

                                               *CCTreeMarkers* *CCTreeHiMarkers*
CCTreeMarkers include  "|","+--->".
CCTreeHiMarkers is the same as CCTreeMarkers except these denote the 
highlighted call-tree.

==============================================================================
5. Features~
                                                *cctree-features*

5.1. Symbol database~

Build cscope database, for example:
> cscope -b -i cscope.files
 [Tip: add -c option to build uncompressed databases for faster
    load speeds]

Load database with command ":CCTreeLoadDB"
(Please note that it might take a while depending on the 
database size)

A database name, i.e., my_cscope.out, can be specified with the command. If
not provided, a prompt will ask for the filename; default is cscope.out.

To unload database, use command ":CCTreeUnLoadDB"

5.2. Exploring source-code~

Get reverse call tree for symbol  <C-\><
:CCTreeTraceReverse <symbolname>     

Get forward call tree for symbol  <C-\>>
:CCTreeTraceForward <symbolname>

Increase depth of tree and update <C-\>=
:CCTreeRecurseDepthPlus     

Decrease depth of tree and update <C-\>-
:CCTreeRecurseDepthMinus    

Open symbol in other window       <CR>
Preview symbol in other window    <Ctrl-P>

5.4. Syntax Coloring~

CCTreeHiXXXX allows dynamic highlighting of the call-tree.  To observe the
effect, move the cursor to the function to highlight the current call-tree.
This option can be turned off using the setting, "CCTreeHilightCallTree" . 

For faster highlighting, the value of 'updatetime' can be changed.

==============================================================================
6. Limitations~
                                                *cctree-limitations*

The following are known limitations:

+ The accuracy of the call-tree will only be as good as the cscope database
generation.  (NOTE: Different flavors of Cscope have some known limitations
due to the lexical analysis engine. This results in incorrectly identified
function blocks, etc.)

+ Functions inside macro definitions will be incorrectly attributed to the top
level calling function

==============================================================================
7. FAQ~
                                                *cctree-faq*

+ I see strange characters "!#@" on my screen when dynamic highlighting is
enabled. Why do I see them?
  
Check :hi ignore. You will see something like
hi ignore ctermfg=white guifg=bg
    
  For console, white must be your background color; for GUI, guifg must be set
to bg.

==============================================================================
8. History~
                                                *cctree-history*

Version 0.4: September 28, 2008
      1. Rewrite of display-related code
      2. New syntax hightlighting
      3. Dynamic highlighting for call-trees
      4. Support for new window modes (vertical, horizontal)  
      5. New display format option for compact or wide call-trees
      6. Preview window fix

Version 0.3: September 21, 2008
      1. Support compressed cscope databases
      2. Display window related bugs fixed
      3. More intuitive display and folding capabilities
    
Version 0.2: September 12, 2008
      (Patches from Yegappan Lakshmanan, thanks!)
      1. Support for using the plugin in Vi-compatible mode
      2. Filtering out unwanted lines before processing the db
      3. Command-line completion for the commands
      4. Using the cscope db from any directory

Version 0.1: August 31,2008
      1. Cross-referencing support for only functions and macros
         (Note: Functions inside macro definitions will be incorrectly
         attributed to the top level calling function)


==============================================================================
9. Thanks~
                                                 *cctree-thanks*

    Michael Wookey                 (Ver 0.4 -- Testing/bug report/patches)
    Yegappan Lakshmanan            (Ver 0.2 -- Patches)

    The Vim Community, ofcourse :)


vim:tw=78:fo=tcq2:isk=!-~,^*,^\|,^\":ts=8:ft=help:norl: 
